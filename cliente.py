import paho.mqtt.client as mqtt

# --- CONFIGURA√á√ïES ---
BROKER_ADDRESS = "broker.hivemq.com"
BROKER_PORT = 1883
TOPICO_SENSOR_TEMPERATURA = "estufa/sensor/temperatura"
TOPICO_VENTILACAO_COMANDO = "estufa/ventilacao/comando"
TEMP_MIN_IDEAL = 18.0
TEMP_MAX_IDEAL = 25.0

# --- FUN√á√ÉO PARA CONECTAR ---
def on_connect(client, userdata, flags, rc, properties=None): # Adicionado 'properties' para nova vers√£o
    if rc == 0:
        print("‚úÖ Conectado ao Broker com sucesso!")
        client.subscribe(TOPICO_SENSOR_TEMPERATURA)
        print(f"üëÇ Inscrito no t√≥pico do sensor: '{TOPICO_SENSOR_TEMPERATURA}'")
    else:
        print(f"‚ùå Falha na conex√£o, c√≥digo de retorno: {rc}")

# --- FUN√á√ÉO PARA MANDAR A MENSAGEM ---

def on_message(client, userdata, message):
    temperatura_recebida = message.payload.decode()
    print(f"\nüå°Ô∏è Temperatura recebida: {temperatura_recebida}¬∞C")

    try:
        temp_float = float(temperatura_recebida)
        comando_ventilacao = ""

        if temp_float < TEMP_MIN_IDEAL or temp_float > TEMP_MAX_IDEAL:
            comando_ventilacao = "LIGAR ‚úÖ"
            print(f"üö® Alerta! Temperatura fora do ideal. Decis√£o: {comando_ventilacao} ventila√ß√£o.")
        else:
            comando_ventilacao = "SISTEMA DESLIGADO, TEMPERATURA IDEAL ‚ùå"
            print(f"üëç Temperatura ideal. Decis√£o: {comando_ventilacao} ventila√ß√£o.")

        print(f"üì§ Enviando comando '{comando_ventilacao}' para o t√≥pico '{TOPICO_VENTILACAO_COMANDO}'...")
        client.publish(TOPICO_VENTILACAO_COMANDO, comando_ventilacao)

    except ValueError:
        print("‚ö†Ô∏è Erro: A mensagem recebida n√£o √© um n√∫mero v√°lido.")

# --- PROGRAMA ---

client = mqtt.Client(mqtt.CallbackAPIVersion.VERSION2, client_id="pneumoutramiscroscopicossilicovulcanoconiotico")

client.on_connect = on_connect
client.on_message = on_message

print("üîå Conectando ao broker...")
client.connect(BROKER_ADDRESS, BROKER_PORT, 60)

client.loop_forever()